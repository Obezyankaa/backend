generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Movie {
  id          String  @id @default(uuid())
  title       String
  description String
  isAvailable Boolean @default(false) @map("is_available")

  createAt  DateTime @default(now()) @map("create_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("movies")
}

// model Movie {
//   id String @id @default(uuid())
//   title String
//   description String?
//   releaseYear Int @map("release_year")
//   rating Float @default(0.0)
//   isAvailable Boolean @default(false) @map("is_available")
//   genre Genre @default(DRAMA)

//   poster MoviePoster? @relation(fields: [posterId], references: [id])
//   posterId String? @unique @map("poster_id")
//   reviews Review[] @relation("movie_reviews")
//   actors Actor[] @relation("movie_actors")

//   createAt DateTime @default(now()) @map("create_at")
//   updatedAt DateTime @updatedAt @map("updated_at")

//   // @@index([releaseYear, title]) декаратов для быстрого поиска по полям releaseYear и title
//   @@map("movies")
// }

// model MoviePoster {
//   id String @id @default(uuid())
//   url String

//   movie Movie? @relation()

//   createAt DateTime @default(now()) @map("create_at")
//   updatedAt DateTime @updatedAt @map("updated_at")

//   @@map("movie_posters")
// }

// model Review {
//   id String @id @default(uuid())
//   text String
//   rating Decimal @default(0.0)

//   movie Movie @relation("movie_reviews", fields: [movieId], references: [id], onDelete: Cascade)
//   movieId String @map("movie_id")

//   createAt DateTime @default(now()) @map("create_at")
//   updatedAt DateTime @updatedAt @map("updated_at")
//   // @@unique([movieId, userId]) уникальное значение только 1 пользователь может оставить 1 отзыв на фильм 
//   @@map("reviews")
// }

// model Actor {
//   id String @id @default(uuid())
//   name String

//   movies Movie[] @relation("movie_actors")

//   createAt DateTime @default(now()) @map("create_at")
//   updatedAt DateTime @updatedAt @map("updated_at")
//   @@map("actors")
// }

// enum Genre {
//   ACTION
//   COMEDY
//   DRAMA
//   HORROR

//   @@map("enum_genres")
// }
